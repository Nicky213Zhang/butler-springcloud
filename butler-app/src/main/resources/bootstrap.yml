# 这里使用的是 bootstrap.yml 这个配置，bootstrap的优先级高于application，
# 很多配置都是要在服务启动前加载，所以使用bootstrap
spring:
    cloud:
        config:
            # 启动什么环境下的配置
            profile: dev
            # 对应前配置文件的git分支
            label: master
            # 对应前配置文件中的{application}部分
            name: butler
            # 配置服务的URL【如果使用eureka，则不再写URL，使用下面的discovery的形式】
            # uri: http://127.0.0.1:8082/
            discovery:
                enabled: true
                # 指定配置中心的服务名称
                service-id: config-server
            bus:
                enabled: true
                trace:
                    enabled: true
    # springcloud bus + rabbitmq 实现全自动刷新集群配置
    rabbitmq:
        host: 192.168.56.101
        port: 5672
        username: guest
        password: guest

eureka:
    instance:
        hostname: 192.168.114.26
        ip-address: 192.168.114.26
        prefer-ip-address: true
        # 心跳检测检测与续约时间
        lease-renewal-interval-in-seconds: 3   # 每间隔1s，向服务端发送一次心跳，证明自己依然”存活“
        lease-expiration-duration-in-seconds: 5 #告诉服务端，如果我2s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
    client:
        # 注册中心地址
        service-url:
            defaultZone: http://192.168.114.26:8081/eureka/